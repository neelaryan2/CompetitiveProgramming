<snippet>
	<content><![CDATA[
struct PersistentDSU {
    int comp;
    vector<int> siz, par;
    stack<int> states;
    PersistentDSU(int n = 0) {
        comp = n;
        par.resize(n);
        siz.assign(n, 1);
        for (int i = 0; i < n; i++) {
            par[i] = i;
        }
    }
    int root(int a) {
        while (a != par[a])
            a = par[a];
        return a;
    }
    int unite(int a, int b) {
        a = root(a), b = root(b);
        if (a == b) return 0;
        if (siz[a] > siz[b])
            swap(a, b);
        states.push(a);
        siz[b] += siz[a];
        par[a] = b;
        comp--;
        return 1;
    }
    int rollback(int cnt = 1) {
        while (cnt--) {
            if (states.empty())
                return 0;
            int s = states.top();
            states.pop();
            siz[par[s]] -= siz[s];
            par[s] = s;
            comp++;
        }
        return 1;
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>persistent_dsu</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
