<snippet>
	<content><![CDATA[
using ll = long long;
const ll inf = 1e18;
using pli = pair<ll, int>;
vector<ll> dist;
vector<vector<pli>> adj;
void dijkstra(int s) {
    int n = adj.size();
    priority_queue<pli> pq;
    dist.assign(n, inf);
    pq.push(make_pair(0, s));
    dist[s] = 0;
    while (!pq.empty()) {
        int v = pq.top().second;
        ll d = -pq.top().first;
        pq.pop();
        if (d > dist[v]) continue;
        for (pli p : adj[v]) {
            ll w = p.first;
            int u = p.second;
            if (dist[v] + w < dist[u]) {
                dist[u] = dist[v] + w;
                // par[u] = v;
                pq.push(make_pair(-dist[u], u));
            }
        }
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>dijkstra</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
