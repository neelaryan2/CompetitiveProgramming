<snippet>
	<content><![CDATA[
    static class FenwickTree {
        private long[] B;

        public FenwickTree(int n) {
            B = new long[n];
            Arrays.fill(B, 0);
        }

        public void add(int i, long x) {
            int n = B.length;
            for (; i < n; i += i & (-i))
                B[i] += x;
        }

        public long sum(int i) {
            long sum = 0;
            for (; i > 0; i -= i & (-i))
                sum += B[i];
            return sum;
        }

        public long get(int i) {
            if (i <= 0)
                return 0;
            long val = B[i];
            int z = i - (i & -i);
            for (--i; i != z; i -= i & (-i))
                val -= B[i];
            return val;
        }

        public int bit_search(int val) {
            long sum = 0;
            int pos = 0, i = 0, s = B.length;
            while ((1 << i) <= s)
                i++;
            for (i = i - 1; i >= 0; i--) {
                int d = (1 << i);
                if (pos + d < s && sum + B[pos + d] < val) {
                    pos = pos + d;
                    sum = sum + B[pos];
                }
            }
            return pos + 1;
        }
    }
    
    static class RangeFenwickTree {
        FenwickTree B1, B2;

        public RangeFenwickTree(int n) {
            B1 = new FenwickTree(n + 1);
            B2 = new FenwickTree(n + 1);
        }

        public void range_add(int l, int r, int x) {
            if (r < l)
                return;
            B1.add(l, x);
            B1.add(r + 1, -x);
            B2.add(l, x * (l - 1));
            B2.add(r + 1, -x * r);
        }

        int range_sum(int l, int r) {
            int res = 0;
            if (r < l)
                return res;
            res = res + B1.sum(r) * r;
            res = res - B2.sum(r);
            res = res + B1.sum(l - 1) * (l - 1);
            res = res - B2.sum(l - 1);
            return res;
        }
    }
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fenwick_tree_BIT</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
